///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V10.10.1.4655 for 8051              17/Mar/2025  21:43:36
// Copyright 2004-2017 IAR Systems AB.
// Standalone license - IAR Embedded Workbench for 8051
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        E:\Github\Mine\Z-Stack\Code\Application\UART\uart_port.c
//    Command line       =  
//        -f C:\Users\ADMINI~1\AppData\Local\Temp\EW80AF.tmp
//        (E:\Github\Mine\Z-Stack\Code\Application\UART\uart_port.c -D SECURE=1
//        -D TC_LINKKEY_JOIN -D NV_INIT -D NV_RESTORE -D xZTOOL_P1 -D xMT_TASK
//        -D xMT_APP_FUNC -D xMT_SYS_FUNC -D xMT_ZDO_FUNC -D xMT_ZDO_MGMT -D
//        xMT_APP_CNF_FUNC -D LCD_SUPPORTED=DEBUG -D MULTICAST_ENABLED=FALSE -D
//        ZCL_READ -D ZCL_DISCOVER -D ZCL_WRITE -D ZCL_BASIC -D ZCL_IDENTIFY -D
//        ZCL_ON_OFF -D ZCL_GROUPS -D HAL_LED=TRUE -D HAL_UART=TRUE -D
//        INT_HEAP_LEN=2048 -lC E:\Github\Mine\Z-Stack\Project\ZLinker\List -lA
//        E:\Github\Mine\Z-Stack\Project\ZLinker\List --diag_suppress
//        Pe001,Pa010 -o E:\Github\Mine\Z-Stack\Project\ZLinker\Obj -e --debug
//        --core=plain --dptr=16,1 --data_model=large --code_model=banked
//        --calling_convention=xdata_reentrant --place_constants=data_rom
//        --nr_virtual_regs 16 -f
//        E:\Github\Mine\Z-Stack\Project\..\Tools\CC2530DB\f8wAllDevice.cfg
//        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
//        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
//        -DOSC32K_CRYSTAL_INSTALLED=FASLE -DBUILD_ALL_DEVICES) -f
//        E:\Github\Mine\Z-Stack\Project\..\Tools\CC2530DB\f8wConfig.cfg
//        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 -DDEFAULT_KEY={0}
//        -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
//        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
//        -DREJOIN_POLL_RATE=440 -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000
//        -DENABLE_LED4_DISABLE_S1) -f
//        E:\Github\Mine\Z-Stack\Project\..\Tools\CC2530DB\f8wZCL.cfg -I
//        E:\Github\Mine\Z-Stack\Project\ -I
//        E:\Github\Mine\Z-Stack\Project\..\Components\stack\bdb\ -I
//        E:\Github\Mine\Z-Stack\Project\..\Components\stack\GP\ -I
//        E:\Github\Mine\Z-Stack\Project\..\Components\hal\include\ -I
//        E:\Github\Mine\Z-Stack\Project\..\Components\hal\target\CC2530EB\ -I
//        E:\Github\Mine\Z-Stack\Project\..\Components\mac\high_level\ -I
//        E:\Github\Mine\Z-Stack\Project\..\Components\mac\low_level\srf04\ -I
//        E:\Github\Mine\Z-Stack\Project\..\Components\mac\low_level\srf04\single_chip\
//        -I E:\Github\Mine\Z-Stack\Project\..\Components\mac\include\ -I
//        E:\Github\Mine\Z-Stack\Project\..\Components\mt\ -I
//        E:\Github\Mine\Z-Stack\Project\..\Components\stack\nwk\ -I
//        E:\Github\Mine\Z-Stack\Project\..\Components\osal\include\ -I
//        E:\Github\Mine\Z-Stack\Project\..\Components\stack\af\ -I
//        E:\Github\Mine\Z-Stack\Project\..\Components\stack\zcl\ -I
//        E:\Github\Mine\Z-Stack\Project\..\Components\stack\sec\ -I
//        E:\Github\Mine\Z-Stack\Project\..\Components\stack\sys\ -I
//        E:\Github\Mine\Z-Stack\Project\..\Components\stack\sapi\ -I
//        E:\Github\Mine\Z-Stack\Project\..\Components\stack\zdo\ -I
//        E:\Github\Mine\Z-Stack\Project\..\Components\zmac\ -I
//        E:\Github\Mine\Z-Stack\Project\..\Components\zmac\f8w\ -I
//        E:\Github\Mine\Z-Stack\Project\..\Components\services\saddr\ -I
//        E:\Github\Mine\Z-Stack\Project\..\Components\services\sdata\ -I
//        E:\Github\Mine\Z-Stack\Project\..\Code\ZMain\ -I
//        E:\Github\Mine\Z-Stack\Project\..\Code\Application\ZigBee\Inc\ -I
//        E:\Github\Mine\Z-Stack\Project\..\Code\Application\UART\Inc\ -Ohz
//        --require_prototypes)
//    Locale             =  Chinese (Simplified)_China.936
//    List file          =  
//        E:\Github\Mine\Z-Stack\Project\ZLinker\List\uart_port.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME uart_port

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__register_banks", "*"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN __INIT_XDATA_Z

        FUNCTION `??_uart_port_rx_callback::?relay`,0203H
        PUBLIC `??uart_port_init::?relay`
        FUNCTION `??uart_port_init::?relay`,0203H
        FUNCTION _uart_port_rx_callback,021603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC uart_port_init
        FUNCTION uart_port_init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 29, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
HalUARTOpen         SYMBOL "HalUARTOpen"
`??HalUARTOpen::?relay` SYMBOL "?relay", HalUARTOpen
HalUARTRead         SYMBOL "HalUARTRead"
`??HalUARTRead::?relay` SYMBOL "?relay", HalUARTRead
HalUARTWrite        SYMBOL "HalUARTWrite"
`??HalUARTWrite::?relay` SYMBOL "?relay", HalUARTWrite
Hal_UART_RxBufLen   SYMBOL "Hal_UART_RxBufLen"
`??Hal_UART_RxBufLen::?relay` SYMBOL "?relay", Hal_UART_RxBufLen
uart_port_init      SYMBOL "uart_port_init"
`??uart_port_init::?relay` SYMBOL "?relay", uart_port_init

        EXTERN `??HalUARTOpen::?relay`
        FUNCTION `??HalUARTOpen::?relay`,00H
        EXTERN `??HalUARTRead::?relay`
        FUNCTION `??HalUARTRead::?relay`,00H
        EXTERN `??HalUARTWrite::?relay`
        FUNCTION `??HalUARTWrite::?relay`,00H
        EXTERN `??Hal_UART_RxBufLen::?relay`
        FUNCTION `??Hal_UART_RxBufLen::?relay`,00H
        EXTERN HalUARTOpen
        FUNCTION HalUARTOpen,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalUARTRead
        FUNCTION HalUARTRead,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalUARTWrite
        FUNCTION HalUARTWrite,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN Hal_UART_RxBufLen
        FUNCTION Hal_UART_RxBufLen,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC

// E:\Github\Mine\Z-Stack\Code\Application\UART\uart_port.c
//    1 
//    2 #include "hal_uart.h"
//    3 #include "uart_port.h"
//    4 
//    5 #define APP_UARTPORT_BUF_LEN                    (128U)
//    6 
//    7 static void _uart_port_rx_callback(uint8 port, uint8 event);

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//    8 static uint8 uart_port_rx_buf[APP_UARTPORT_BUF_LEN];
uart_port_rx_buf:
        DS 128
        REQUIRE __INIT_XDATA_Z
//    9 
//   10 /**
//   11  * @brief UART Hareware initialize
//   12  * @param none
//   13  * @retval none
//   14  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//   15 void uart_port_init(void)
uart_port_init:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function uart_port_init
        CODE
//   16 {
        FUNCALL uart_port_init, HalUARTOpen
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH      DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 29
        MOV       A,#-0x1d
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
//   17     halUARTCfg_t uartConfig;
//   18     uartConfig.configured               = TRUE;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#0x1
        MOVX      @DPTR,A
//   19     uartConfig.baudRate                 = HAL_UART_BR_115200;
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x4
        MOVX      @DPTR,A
//   20     uartConfig.flowControl              = FALSE;
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        MOVX      @DPTR,A
//   21     uartConfig.flowControlThreshold     = 0;
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
//   22     uartConfig.rx.maxBufSize            = APP_UARTPORT_BUF_LEN;
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#-0x80
        MOVX      @DPTR,A
        INC       DPTR
        CLR       A
        MOVX      @DPTR,A
//   23     uartConfig.tx.maxBufSize            = 0;
        MOV       A,#0x12
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
//   24     uartConfig.idleTimeout              = 5;
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x5
        MOVX      @DPTR,A
//   25     uartConfig.intEnable                = TRUE;
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x1
        MOVX      @DPTR,A
//   26     uartConfig.callBackFunc             = _uart_port_rx_callback;
        MOV       A,#0x1b
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#`??_uart_port_rx_callback::?relay` & 0xff
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,#(`??_uart_port_rx_callback::?relay` >> 8) & 0xff
        MOVX      @DPTR,A
//   27     
//   28     HalUARTOpen(HAL_UART_PORT_0, &uartConfig);
        ; Setup parameters for call to function HalUARTOpen
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        MOV       R1,#0x0
        LCALL     `??HalUARTOpen::?relay`; Banked call to: HalUARTOpen
//   29 }
        MOV       A,#0x1d
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 XSP16+0
        POP       DPH
          CFI DPH0 SameValue
          CFI CFA_SP SP+-4
        POP       DPL
          CFI DPL0 SameValue
          CFI CFA_SP SP+-3
        LJMP      ?BRET
          CFI EndBlock cfiBlock0
//   30 

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//   31 static void _uart_port_rx_callback(uint8 port, uint8 event)
_uart_port_rx_callback:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function _uart_port_rx_callback
        CODE
//   32 {
        FUNCALL _uart_port_rx_callback, Hal_UART_RxBufLen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL _uart_port_rx_callback, HalUARTRead
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL _uart_port_rx_callback, HalUARTWrite
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV       A,#-0x9
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
//   33     uint8 rx_len = Hal_UART_RxBufLen(HAL_UART_PORT_0);
        ; Setup parameters for call to function Hal_UART_RxBufLen
        MOV       R1,#0x0
        LCALL     `??Hal_UART_RxBufLen::?relay`; Banked call to: Hal_UART_RxBufLen
        MOV       A,R2
//   34     if(rx_len != 0)
        JZ        ??_uart_port_rx_callback_0
//   35     {
//   36         HalUARTRead(HAL_UART_PORT_0, uart_port_rx_buf, rx_len);
        MOV       R6,A
        ; Setup parameters for call to function HalUARTRead
        MOV       R4,A
        MOV       R5,#0x0
        MOV       R2,#uart_port_rx_buf & 0xff
        MOV       R3,#(uart_port_rx_buf >> 8) & 0xff
        MOV       R1,#0x0
        LCALL     `??HalUARTRead::?relay`; Banked call to: HalUARTRead
//   37         HalUARTWrite(HAL_UART_PORT_0, uart_port_rx_buf, rx_len);
        ; Setup parameters for call to function HalUARTWrite
        MOV       A,R6
        MOV       R4,A
        MOV       R5,#0x0
        MOV       R2,#uart_port_rx_buf & 0xff
        MOV       R3,#(uart_port_rx_buf >> 8) & 0xff
        MOV       R1,#0x0
        LCALL     `??HalUARTWrite::?relay`; Banked call to: HalUARTWrite
//   38     }
//   39 }
??_uart_port_rx_callback_0:
        MOV       R7,#0x1
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock1

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??uart_port_init::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    uart_port_init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??_uart_port_rx_callback::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    _uart_port_rx_callback

        END
//   40 
//   41 
//   42 
// 
// 153 bytes in segment BANKED_CODE
//  12 bytes in segment BANK_RELAYS
// 128 bytes in segment XDATA_Z
// 
//  12 bytes of CODE     memory
// 153 bytes of HUGECODE memory
// 128 bytes of XDATA    memory
//
//Errors: none
//Warnings: none
